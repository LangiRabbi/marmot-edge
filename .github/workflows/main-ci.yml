name: Main CI Pipeline

on:
  push:
    branches: [ main, develop, feat/* ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  # Backend Tests
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev libglib2.0-0 libsm6 libxext6 libxrender-dev

      - name: Install Python dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov httpx flake8 black isort

      - name: Run Black formatter check
        working-directory: backend
        run: black --check --diff .

      - name: Run isort import sorting check
        working-directory: backend
        run: isort --check-only --diff .

      - name: Run basic health test
        working-directory: backend
        env:
          DATABASE_URL: sqlite:///./test.db
          SECRET_KEY: test-secret-key
        run: |
          python -m uvicorn app.main_test:app --host 127.0.0.1 --port 8000 &
          sleep 10
          curl -f http://localhost:8000/health || exit 1
          pkill -f uvicorn

  # Frontend Tests
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Run frontend linting
        run: npm run lint

      - name: Build frontend
        run: npm run build

  # Simple Integration Test
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev libglib2.0-0

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install frontend dependencies
        run: npm ci

      - name: Start backend server
        working-directory: backend
        env:
          DATABASE_URL: sqlite:///./test.db
          SECRET_KEY: test-secret-key
        run: |
          python -m uvicorn app.main_test:app --host 127.0.0.1 --port 8000 &
          BACKEND_PID=$!
          echo "BACKEND_PID=$BACKEND_PID" >> $GITHUB_ENV

          # Wait for backend to start
          for i in {1..30}; do
            if curl -f http://localhost:8000/health; then
              echo "Backend is ready"
              break
            fi
            echo "Waiting for backend to start... ($i/30)"
            sleep 2
          done

      - name: Test API endpoints
        run: |
          # Test health endpoint
          curl -f http://localhost:8000/health

          # Test workstations endpoint
          curl -f http://localhost:8000/api/v1/workstations/

      - name: Build frontend
        run: npm run build

      - name: Stop backend server
        if: always()
        run: |
          kill $BACKEND_PID || true