"""Create workstations and zones tables

Revision ID: f1ea596b1427
Revises: 
Create Date: 2025-09-17 23:10:26.281139

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f1ea596b1427'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_settings',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('alert_type', sa.String(length=100), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('threshold_value', sa.Float(), nullable=True),
    sa.Column('threshold_unit', sa.String(length=50), nullable=True),
    sa.Column('recipients', sa.JSON(), nullable=False),
    sa.Column('message_template', sa.String(length=1000), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alert_settings_id'), 'alert_settings', ['id'], unique=False)
    op.create_table('system_settings',
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.String(length=1000), nullable=False),
    sa.Column('value_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_settings_id'), 'system_settings', ['id'], unique=False)
    op.create_index(op.f('ix_system_settings_key'), 'system_settings', ['key'], unique=True)
    op.create_table('workstations',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('video_source_type', sa.String(length=50), nullable=True),
    sa.Column('video_source_url', sa.String(length=500), nullable=True),
    sa.Column('video_config', sa.JSON(), nullable=True),
    sa.Column('current_status', sa.String(length=50), nullable=False),
    sa.Column('last_detection_at', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workstations_id'), 'workstations', ['id'], unique=False)
    op.create_index(op.f('ix_workstations_name'), 'workstations', ['name'], unique=False)
    op.create_table('efficiency_records',
    sa.Column('workstation_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(length=10), nullable=False),
    sa.Column('shift_start', sa.Time(), nullable=True),
    sa.Column('shift_end', sa.Time(), nullable=True),
    sa.Column('total_time', sa.Float(), nullable=False),
    sa.Column('work_time', sa.Float(), nullable=False),
    sa.Column('idle_time', sa.Float(), nullable=False),
    sa.Column('other_time', sa.Float(), nullable=False),
    sa.Column('break_time', sa.Float(), nullable=False),
    sa.Column('efficiency_percentage', sa.Float(), nullable=False),
    sa.Column('status_changes', sa.Integer(), nullable=False),
    sa.Column('last_calculated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['workstation_id'], ['workstations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_efficiency_records_id'), 'efficiency_records', ['id'], unique=False)
    op.create_table('zones',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('workstation_id', sa.Integer(), nullable=False),
    sa.Column('coordinates', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('person_count', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['workstation_id'], ['workstations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_zones_id'), 'zones', ['id'], unique=False)
    op.create_table('detections',
    sa.Column('workstation_id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=True),
    sa.Column('frame_timestamp', sa.DateTime(), nullable=False),
    sa.Column('person_count', sa.Integer(), nullable=False),
    sa.Column('confidence_scores', sa.JSON(), nullable=True),
    sa.Column('bounding_boxes', sa.JSON(), nullable=True),
    sa.Column('zone_status', sa.String(length=50), nullable=False),
    sa.Column('processing_time_ms', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['workstation_id'], ['workstations.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detections_id'), 'detections', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_detections_id'), table_name='detections')
    op.drop_table('detections')
    op.drop_index(op.f('ix_zones_id'), table_name='zones')
    op.drop_table('zones')
    op.drop_index(op.f('ix_efficiency_records_id'), table_name='efficiency_records')
    op.drop_table('efficiency_records')
    op.drop_index(op.f('ix_workstations_name'), table_name='workstations')
    op.drop_index(op.f('ix_workstations_id'), table_name='workstations')
    op.drop_table('workstations')
    op.drop_index(op.f('ix_system_settings_key'), table_name='system_settings')
    op.drop_index(op.f('ix_system_settings_id'), table_name='system_settings')
    op.drop_table('system_settings')
    op.drop_index(op.f('ix_alert_settings_id'), table_name='alert_settings')
    op.drop_table('alert_settings')
    # ### end Alembic commands ###
